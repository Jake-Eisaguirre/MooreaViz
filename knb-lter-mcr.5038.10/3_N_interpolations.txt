#-----------------------------------------------------------------------------------------------------------------------------
#Landscape-scape scale patterns of nutrient enrichment in a coral reef ecosystem: implications for coral to algae phase shifts
#Adam et al.
#3-N_interpolations
#--------------------------------------------------------------------------------------------------------------------------------

#This script uses kriging to create interpolations of N and dN15 from Turbinaria ornata collected at 190 sites around Moorea in January, May, and August 2016  

#Initialization
library(ggplot2)
library(ggnewscale)
library(ggspatial)
library(maptools)
library(reshape2)
library(PBSmapping)
library(sp)
library(mapproj)
library(plyr)
library(data.table)
library(rgeos)
library(ggmap)
library(rgdal)
library(spatstat)
library(vegan)
library(GGally)
library(raster)
library(dplyr)
library(sf)
library(kriging)
library(rgeos)
library(colorRamps)

#Data
#Data generated for this study (knb-lter-mcr.5038)

N<-read.csv("N_summary.csv", header = T)

#Check data structure and variable types

str(N)

#Read in the boundary file that will be used to make the border polygon for interpolation

ashapem<-read.csv("Nut_boundary.csv", header = T)
ashapem<-as.matrix(ashapem)


################Format Moorea DEM so we can use it as a map###################################

dem <- raster('dtm_merged_5m.tif')
dem_land <- raster("dem_land.tif")
mo.shp <- readOGR('Moorea_outline/Isle_outline_gcs84.shp')
mo.shp.dem <- spTransform(mo.shp,projection(dem_land)) # transform to same projection as dem
mo.sf <- st_as_sf(mo.shp.dem)


# land --------------------------------------------------------------------
# hill shade
slp <- terrain(dem_land,opt='slope')
asp <- terrain(dem_land,opt='aspect')
hill <- hillShade(slp,asp)# compute hillshade 
#plot(hill)


# transform rasters for ggplot
dem.p  <-  rasterToPoints(dem_land)
dem.df <-  data.frame(dem.p)
colnames(dem.df) = c("x", "y", "alt")

hill.p  <-  rasterToPoints(hill)
hill.df <-  data.frame(hill.p)
colnames(hill.df) = c("x", "y", "alt")


#########Get coordinates in UTM

spdf<-SpatialPointsDataFrame(coords = N[c('Longitude','Latitude')], data = N, proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
TurbUTM<-spTransform(spdf, projection(mo.shp.dem))
TurbUTM.df <- as.data.frame(TurbUTM)


N_UTM<-cbind(TurbUTM.df[,12:13], N[,c(1,5:11)])

str(N_UTM)


###################################Make map to look at points


ggplot() +
  theme_bw() +   
  geom_sf(data = mo.sf, fill=NA, lwd = 0.2) +
  geom_point(data= N_UTM, aes(Longitude.1, Latitude.1), size = 2)+
  coord_sf() +
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank()) +  
  	theme(panel.grid.major = element_line(color = 'white', linetype = "dashed",size = 0.5),
        plot.background=element_rect(fill='white'))


###################### Now we will do the kriging 

##Create dataframe for each sample period

N_UTM_Jan<-subset(N_UTM, !is.na(N_UTM[,5]))

N_UTM_May<-subset(N_UTM, !is.na(N_UTM[,6]))

N_UTM_July<-subset(N_UTM, !is.na(N_UTM[,7]))



##### the borderpolygon object is a list that will be part of the kriging function

borderpolygon <- list(data.frame(ashapem[,1], ashapem[,2]))

head(N_UTM_May)

### create semivariogram

#Change the values to do the kriging for different seasons

krig1 <- kriging(N_UTM_May$Longitude.1, N_UTM_May$Latitude.1, N_UTM_May$Percent_N_May, pixels=1000,polygons=borderpolygon) ###pixels controls how fine or course you want the prediction data frame to be
str(krig1)

krig2 <- krig1$map


###### Now we can make the map ####################
 

ggplot() +
  theme_bw() +
  geom_point(data=krig2, aes(x=x, y=y, colour=pred), size=4) + 
  scale_colour_gradientn(name="",colours = rev(rainbow(10))) +   
  geom_raster(data=hill.df, aes(x=x,y=y,fill = alt),show.legend=FALSE) + scale_fill_gradientn(colors = grey(50:100/100)) +
  new_scale("fill") +
  geom_sf(data = mo.sf, fill=NA, lwd = 0.2) +
  geom_point(data= N_UTM_May, aes(Longitude.1, Latitude.1), size = 1)+ 	#Remember to change this to the appropriate sampling period
  coord_sf() +
  theme(axis.line=element_blank(),
        axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        axis.title.x=element_blank(),
        axis.title.y=element_blank()) +  
  	theme(panel.grid.major = element_line(color = 'white', linetype = "dashed",size = 0.5),
        plot.background=element_rect(fill='white'))


#ggsave(filename = "Percent_N_May_2016_terrain.pdf")  








